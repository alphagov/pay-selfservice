{% extends "../../settings-layout.njk" %}

{% set settingsPageTitle = "Service director" %}

{% block settingsContent %}
  <h1 class="govuk-heading-l">{{ settingsPageTitle }}</h1>

  <p class="govuk-body">We need the details of the director of the service or someone at director level in your
    organisation. They could be the same as your responsible person. The details will be used by Stripe to run
    anti-money laundering checks.</p>

  <p class="govuk-body">If your organisation does not have a director, we need the details of a person who has the
    authority to transfer funds. Someone like a chief executive officer (CEO), chief financial officer (CFO), or chief
    operating officer (COO).</p>

  <form id="director-form" method="post" class="govuk-!-margin-top-4" novalidate>
    <input id="csrf" name="csrfToken" type="hidden" value="{{ csrf }}"/>

    {% call govukFieldset({
      legend: {
        text: "Name",
        classes: "govuk-fieldset__legend--m",
        isPageHeading: false
      }
    }) %}
      {{ govukInput({
        label: {
          text: "First name"
        },
        id: "first-name",
        name: "firstName",
        value: name.firstName,
        type: "text",
        autocomplete: "given-name",
        spellcheck: false,
        errorMessage: { text: errors.formErrors['firstName'] } if errors.formErrors['firstName'] else false,
        classes: "govuk-!-width-two-thirds"
      }) }}

      {{ govukInput({
        label: {
          text: "Last name"
        },
        id: "last-name",
        name: "lastName",
        value: name.lastName,
        type: "text",
        autocomplete: "family-name",
        spellcheck: false,
        errorMessage: { text: errors.formErrors['lastName'] } if errors.formErrors['lastName'] else false,
        classes: "govuk-!-width-two-thirds"
      }) }}

    {% endcall %}

    {% include "simplified-account/settings/stripe-details/partials/_stripe_person_dob.njk" %}

    {{ govukInput({
      label: {
        text: "Work email address",
        classes: "govuk-label--m"
      },
      id: "work-email",
      name: "workEmail",
      value: workEmail,
      type: "email",
      autocomplete: "work email",
      spellcheck: false,
      errorMessage: { text: errors.formErrors['workEmail'] } if errors.formErrors['workEmail'] else false,
      classes: "govuk-!-width-full"
    }) }}

    {{ govukButton({
      text: "Save and continue",
      id: "director-submit"
    }) }}
  </form>

  <script>
    // progressively enhance dob input to only accept digits
    const elementIds = [{ id: 'dob-day', length: 2 }, { id: 'dob-month', length: 2 }, { id: 'dob-year', length: 4 }]
    elementIds.forEach(element => {
      document.getElementById(element.id).addEventListener('input', function (e) {
        let value = e.target.value
        e.target.value = value.replace(/\D/g, '').slice(0, element.length)
      })
    })
    // progressively enhance the submit button to be disabled during form submission as it takes a few seconds to talk to Stripe
    const submitButton = document.getElementById('director-submit')
    document.getElementById('director-form').addEventListener('submit', function () {
      submitButton.setAttribute('disabled', 'true')
      submitButton.setAttribute('aria-disabled', 'true')
      submitButton.setAttribute('class', 'govuk-button govuk-button--disabled')
      submitButton.textContent = 'Saving...'
    })
  </script>
{% endblock %}
