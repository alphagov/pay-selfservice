{% from "govuk/components/pagination/macro.njk" import govukPagination %}
{% from "./macro/webhook-status.njk" import webhookStatus %}
{% from "./macro/webhook-subscriptions.njk" import webhookSubscriptions %}
{% from "./macro/webhook-event-status.njk" import webhookEventStatus %}
{% extends "../settings-layout.njk" %}

{% set settingsPageTitle = webhook.description %}

{% block settingsContent %}
  <div class="header-with-tag">
    <h1 class="govuk-heading-l">{{ webhook.description }}</h1>
    <div>
      {{ webhookStatus(webhook.status) }}
    </div>
  </div>

  {{ govukSummaryList({
    rows: [
      {
        key: {
          text: 'Callback URL'
        },
        value: {
          text: webhook.callbackUrl
        }
      },
      {
        key: {
          text: 'Payment events sent by this webhook'
        },
        value: {
          html: webhookSubscriptions(webhook, eventTypes)
        }
      },
      {
        key: {
          text: 'Date created'
        },
        value: {
          html: webhook.createdDate | govukDate
        }
      }
    ]
  }) }}

  <div class="govuk-button-group">
    {{ govukButton({
      href: updateWebhookLink,
      text: 'Update webhook',
      classes: 'govuk-button--secondary'
    }) }}
    {% if webhook.status == 'ACTIVE' %}
      {{ govukButton({
        href: toggleWebhookStatusLink,
        text: 'Deactivate webhook',
        classes: 'govuk-button--secondary'
      }) }}
    {% else %}
      {{ govukButton({
        href: toggleWebhookStatusLink,
        text: 'Activate webhook',
        classes: 'govuk-button--secondary'
      }) }}
    {% endif %}
  </div>

  <h2 class="govuk-heading-m">Signing Secret</h2>
  <p class="govuk-body">Webhook messages sent by GOV.UK Pay will include a signature. Only your application should store this secret to verify messages are from GOV.UK Pay.</p>
  <h3 class="govuk-visually-hidden" id="app-subnav-heading">{{ webhook.description }} signing secret </h3>
  <div>
    <span id="signing-secret" class="code copy-target">{{ signingSecret.signing_key }}</span>
  </div>
  {{ govukButton({
    text: "Copy signing secret to clipboard",
    classes: "govuk-button--secondary govuk-!-margin-top-4",
    attributes: {
      id: "copy-signing-secret",
      "data-copy-text": true,
      "data-target": "copy-target",
      "data-success": "Signing secret copied",
      "data-notification-target": "copy-notification"
    }
  }) }}
  <div class="copy-notification govuk-visually-hidden" aria-live="assertive"></div>

  <h2 id="events" class="govuk-heading-m">Events</h2>
  <p class="govuk-body">Events sent to your webhook are stored for 7 days.</p>
  <form action="#events" method="get">
    {{ govukSelect({
      classes: "govuk-!-margin-right-2 govuk-!-margin-bottom-2 govuk-!-margin-top-1",
      id: "filter-events",
      name: "deliveryStatus",
      label: {
        text: "Filter events by delivery status",
        classes: "govuk-label--s"
      },
      value: deliveryStatus,
      items: [
        {
          value: "all",
          text: "All"
        },
        {
          value: "successful",
          text: "Successful"
        },
        {
          value: "failed",
          text: "Failed"
        },
        {
          value: "pending",
          text: "Pending retry"
        },
        {
          value: "will_not_send",
          text: "Will not send"
        }
      ],
      formGroup: {
        classes: "govuk-!-margin-bottom-2",
        afterInput: {
          html: '<button type="submit" class="govuk-button govuk-!-margin-top-1 govuk-!-margin-bottom-2" data-module="govuk-button">Update</button>'
        }
      }
    }) }}
  </form>

  {% set eventRows = [] %}
  {% for event in webhookEvents %}
    {% set eventRow = [
      {
        text: event.resourceId,
        classes: 'break-all'
      },
      { html: eventTypes[event.eventType | upper] + '<br><a class="govuk-link govuk-link--no-visited-state" href="'+event.eventDetailUrl+'">View details</a>' },
      {
        html: webhookEventStatus(event.lastDeliveryStatus)
      },
      { text: event.eventDate | govukDate({ preserveTime: true }) }
    ] %}
    {% set eventRows = (eventRows.push(eventRow), eventRows) %}
  {% endfor %}

  {{ govukTable({
    firstCellIsHeader: false,
    head: [
      {
        text: "GOV.UK payment ID"
      },
      {
        text: "Event name"
      },
      {
        text: "Delivery status"
      },
      {
        text: "Event date"
      }
    ],
    rows: eventRows
  }) }}

  {{ govukPagination(pagination) }}

  <p data-cy="pagination-detail" class="govuk-body">{% if pagination.total > 0 %}Showing {{ pagination.startIndex }} to {{ pagination.endIndex }} of{% endif %} {{ pagination.total }} events</p>

{% endblock %}
