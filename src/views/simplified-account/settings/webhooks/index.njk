{% from "./macro/webhook-status.njk" import webhookStatus %}
{% extends "../settings-layout.njk" %}

{% set settingsPageTitle = "Webhooks" %}

{% macro webhookSubscriptions(webhook) %}
  <ul class="govuk-list">
    {% for subscription in webhook.subscriptions | sort %}
      {% set key = subscription | upper %}
      <li>{{ eventTypes[key] }}</li>
    {% endfor %}
  </ul>
{% endmacro %}

{% macro webhookDescriptionWithTag(webhook) %}
  <div class="text-with-tag">
    <div class="text-with-tag__text">{{ webhook.description }}</div>
    <div class="text-with-tag__tag">{{ webhookStatus(webhook.status) }}</div>
  </div>
{% endmacro %}

{% block settingsContent %}
  <h1 class="govuk-heading-l">{{ settingsPageTitle }}</h1>
  <p class="govuk-body">Use webhooks to send a message to your application when a payment is processed.</p>
  <p class="govuk-body">Find out more about {{ "setting up webhooks in your
      application" | docsLink("webhooks") }}.
  </p>

  {{ govukButton({
    text: "Create a new webhook",
    classes: "govuk-button",
    href: createWebhookLink
  }) }}

  {% if (activeWebhooks.length + deactivatedWebhooks.length) == 0 %}
    <h2 class="govuk-heading-m">There are no configured webhooks</h2>
  {% else %}

    {% if activeWebhooks.length > 0 %}
      <h2 class="govuk-heading-m">Active webhooks ({{ activeWebhooks.length }})</h2>

      {% for webhook in activeWebhooks %}
        {% set webhookSubscriptionsList = webhookSubscriptions(webhook) %}
        {{ govukSummaryList({
          card: {
            classes: 'card-with-tag',
            title: {
              html: webhookDescriptionWithTag(webhook)
            },
            actions: {
              items: [
                {
                  href: webhook.detailUrl,
                  text: 'View',
                  classes: "govuk-link govuk-link--no-visited-state"
                },
                {
                  href: webhook.updateUrl,
                  text: 'Update',
                  classes: "govuk-link govuk-link--no-visited-state"
                }
              ]
            }
          },
          rows: [
            {
              key: {
              text: 'Callback URL'
            },
              value: {
              text: webhook.callbackUrl
            }
            },
            {
              key: {
              text: 'Payment events sent by this webhook'
            },
              value: {
              html: webhookSubscriptionsList
            }
            }
          ]
        }) }}
      {% endfor %}
    {% endif %}

    {% if deactivatedWebhooks.length > 0 %}
      <h2 class="govuk-heading-m">Deactivated webhooks ({{ deactivatedWebhooks.length }})</h2>

      {% for webhook in deactivatedWebhooks %}
        {% set webhookSubscriptionsList = webhookSubscriptions(webhook) %}
        {{ govukSummaryList({
          card: {
            classes: 'card-with-tag',
            title: {
              html: webhookDescriptionWithTag(webhook)
            },
            actions: {
              items: [
                {
                  href: webhook.detailUrl,
                  text: 'View',
                  classes: "govuk-link govuk-link--no-visited-state"
                },
                {
                  href: webhook.updateUrl,
                  text: 'Update',
                  classes: "govuk-link govuk-link--no-visited-state"
                }
              ]
            }
          },
          rows: [
            {
              key: {
              text: 'Callback URL'
            },
              value: {
              text: webhook.callbackUrl
            }
            },
            {
              key: {
              text: 'Payment events sent by this webhook'
            },
              value: {
              html: webhookSubscriptionsList
            }
            }
          ]
        }) }}
      {% endfor %}
    {% endif %}
  {% endif %}
{% endblock %}
