{% extends "../../layout.njk" %}
{% from "../../macro/error-summary.njk" import errorSummary %}

{% block pageTitle %}
  Enter responsible person details - {{ currentService.name }} - GOV.UK Pay
{% endblock %}

{% block sideNavigation %}
  {% if isSwitchingCredentials or enableStripeOnboardingTaskList %}
    {% include "includes/side-navigation.njk" %}
  {% endif %}
{% endblock %}

{% block mainContent %}

  <div class="govuk-grid-column-two-thirds">

    {% if isSwitchingCredentials %}
      {{ govukBackLink({
        text: "Back to Switching payment service provider (PSP)",
        classes: "govuk-!-margin-top-0",
        href: formatAccountPathsFor(routes.account.switchPSP.index, currentGatewayAccount.external_id)
      }) }}
    {% endif %}
    {% if enableStripeOnboardingTaskList %}
      {{ govukBackLink({
        text: "Back to information for Stripe",
        classes: "govuk-!-margin-top-0",
        href: formatAccountPathsFor(routes.account.yourPsp.index, currentGatewayAccount.external_id, currentCredential.external_id)
      }) }}
    {% endif %}

    {{ errorSummary ({
      errors: errors,
      hrefs: {
        'first-name': '#first-name',
        'last-name': '#last-name',
        'home-address-line-1': '#home-address-line-1',
        'home-address-line2': '#home-address-line2',
        'home-address-city': '#home-address-city',
        'home-address-postcode': '#home-address-postcode',
        'dob-day': '#dob-day',
        'telephone-number': '#telephone-number',
        'email': '#email'
      }
    }) }}

    <h1 class="govuk-heading-l">Enter responsible person details</h1>

    <p class="govuk-body">We need details of a <a class="govuk-link" href="https://www.payments.service.gov.uk/required-responsible-person-and-director-information/">responsible person</a> so that Stripe can run anti-money laundering checks. Liability stays at an organisational and not individual level.</p>
    <p class="govuk-body">The responsible person can be:</p>
    <ul class="govuk-list govuk-list--bullet">
      <li>someone in your organisation authorised to sign contracts</li>
      <li>the head of finance</li>
      <li>the head of the organisation</li>
    </ul>

    <p class="govuk-body">Stripe will store the responsible person’s details, not GOV.UK Pay.</p>

    <form id="responsible-person-form" method="post" class="govuk-!-margin-top-4" novalidate>
      <input id="csrf" name="csrfToken" type="hidden" value="{{ csrf }}"/>

      {% call govukFieldset({
        legend: {
          text: "Name",
          classes: "govuk-fieldset__legend--m",
          isPageHeading: false
        }
      }) %}

      {% set firstNameError = false %}
      {% if errors['first-name'] %}
        {% set firstNameError = {
          text: errors['first-name']
        } %}
      {% endif %}
      {{ govukInput({
        label: {
          text: "First name"
        },
        id: "first-name",
        name: "first-name",
        value: firstName,
        type: "text",
        autocomplete: "given-name",
        spellcheck: false,
        errorMessage: firstNameError,
        classes: "govuk-input--width-20"
      }) }}

      {% set lastNameNameError = false %}
      {% if errors['last-name'] %}
        {% set lastNameNameError = {
          text: errors['last-name']
        } %}
      {% endif %}
      {{ govukInput({
        label: {
          text: "Last name"
        },
        id: "last-name",
        name: "last-name",
        value: lastName,
        type: "text",
        autocomplete: "family-name",
        spellcheck: false,
        errorMessage: lastNameNameError,
        classes: "govuk-input--width-20"
      }) }}

      {% endcall %}

      {% call govukFieldset({
        legend: {
          text: "Home address",
          classes: "govuk-fieldset__legend--m",
          isPageHeading: false
        }
      }) %}

      <p class="govuk-body">Do not use a work address. Stripe needs the responsible person’s home address to check their identity</p>

      {% set homeAddressLine1Error = false %}
      {% if errors['home-address-line-1'] %}
        {% set homeAddressLine1Error = {
          text: errors['home-address-line-1']
        } %}
      {% endif %}
      {{ govukInput({
        label: {
          html: 'Building name, number and street <span class="govuk-visually-hidden">line 1 of 2</span>'
        },
        id: "home-address-line-1",
        name: "home-address-line-1",
        value: homeAddressLine1,
        type: "text",
        autocomplete: "address-line1",
        errorMessage: homeAddressLine1Error
      }) }}
      {% set homeAddressLine2Error = false %}
      {% if errors['home-address-line-2'] %}
        {% set homeAddressLine2Error = {
          text: errors['home-address-line-2']
        } %}
      {% endif %}
      {{ govukInput({
        label: {
          html: '<span class="govuk-visually-hidden">Building name, number and street line 2 of 2</span>'
        },
        id: "home-address-line-2",
        name: "home-address-line-2",
        value: homeAddressLine2,
        type: "text",
        autocomplete: "address-line2",
        errorMessage: homeAddressLine2Error,
        attributes: {
          "aria-label": "Enter address line 2"
        }
      }) }}
      {% set homeAddressCityError = false %}
      {% if errors['home-address-city'] %}
        {% set homeAddressCityError = {
          text: errors['home-address-city']
        } %}
      {% endif %}
      {{ govukInput({
        label: {
          text: "Town or city"
        },
        id: "home-address-city",
        name: "home-address-city",
        value: homeAddressCity,
        type: "text",
        autocomplete: "address-level2",
        errorMessage: homeAddressCityError,
        classes: "govuk-input--width-20"
      }) }}
      {% set homeAddressPostcodeError = false %}
      {% if errors['home-address-postcode'] %}
        {% set homeAddressPostcodeError = {
          text: errors['home-address-postcode']
        } %}
      {% endif %}
      {{ govukInput({
        label: {
          text: "Postcode"
        },
        id: "home-address-postcode",
        name: "home-address-postcode",
        value: homeAddressPostcode,
        type: "text",
        autocomplete: "postal-code",
        classes: "govuk-input--width-10",
        errorMessage: homeAddressPostcodeError
      }) }}

      {% endcall %}

      {% set dobError = false %}
      {% if errors['dob-day'] %}
        {% set dobError = {
          text: errors['dob-day']
        } %}
      {% endif %}
      {{ govukDateInput({
        id: "dob",
        namePrefix: "dob",
        fieldset: {
          legend: {
            classes: "govuk-fieldset__legend--m",
            text: "Date of birth"
          }
        },
        hint: {
          text: "For example, 26 5 1980"
        },
        errorMessage: dobError,
        items: [
          {
            value: dobDay,
            name: "day",
            classes: "govuk-input--width-2",
            autocomplete: "bday-day"
          },
          {
            value: dobMonth,
            name: "month",
            classes: "govuk-input--width-2",
            autocomplete: "bday-month"
          },
          {
            value: dobYear,
            name: "year",
            classes: "govuk-input--width-4",
            autocomplete: "bday-year"
          }
        ]
      }) }}

      {{ govukInput({
        label: {
          text: "Work telephone number",
          classes: "govuk-label--m"
        },
        hint: {
          text: "Include the country code for international numbers"
        },
        id: "telephone-number",
        name: "telephone-number",
        value: telephone,
        type: "text",
        autocomplete: "work tel",
        errorMessage: { text: errors['telephone-number'] } if errors['telephone-number'] else false,
        classes: "govuk-!-width-two-thirds"
      }) }}

      {{ govukInput({
        label: {
          text: "Work email address",
          classes: "govuk-label--m"
        },
        id: "email",
        name: "email",
        value: email,
        type: "email",
        autocomplete: "work email",
        spellcheck: false,
        errorMessage: { text: errors.email } if errors.email else false,
        classes: "govuk-!-width-two-thirds"
      }) }}

      {{ govukButton({ text: "Save and continue" }) }}

    </form>
  </div>
{% endblock %}
